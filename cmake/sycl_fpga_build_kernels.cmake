macro(build_kernels_emulator)
    foreach(WINDOW_SIZE ${WINDOW_SIZE_LIST})
        foreach(MIN_IBF_K ${MIN_IBF_K_LIST})
            if(${WINDOW_SIZE} GREATER ${MIN_IBF_K})
                foreach(BIN_COUNT ${BIN_COUNT_LIST})
                    foreach(KERNEL_COPYS ${KERNEL_COPYS_LIST})
                        set(EMULATOR_DEVICE_TARGET ${TARGET_NAME}_kernel_w${WINDOW_SIZE}_k${MIN_IBF_K}_b${BIN_COUNT}_kernels${KERNEL_COPYS}.fpga_emu)
                        add_library(${EMULATOR_DEVICE_TARGET} SHARED ${DEVICE_SOURCE_FILE})
                        target_include_directories(${EMULATOR_DEVICE_TARGET} PRIVATE ${INCLUDE_PATH})
                        target_compile_definitions(${EMULATOR_DEVICE_TARGET} PRIVATE -DFPGA_EMULATOR -DWINDOW_SIZE=${WINDOW_SIZE} -DMIN_IBF_K=${MIN_IBF_K} -DBIN_COUNT=${BIN_COUNT} -DKERNEL_COPYS=${KERNEL_COPYS})
                        target_compile_options(${EMULATOR_DEVICE_TARGET} PRIVATE ${COMMON_COMPILE_FLAGS} ${EMULATOR_AC_INT_FLAG})
                        target_link_options(${EMULATOR_DEVICE_TARGET} PRIVATE ${COMMON_LINK_FLAGS} ${EMULATOR_AC_INT_FLAG})
                        add_dependencies(${EMULATOR_TARGET} ${EMULATOR_DEVICE_TARGET})
                    endforeach()
                endforeach()
            else()
                message(WARNING "Deselecting w${WINDOW_SIZE}_k${MIN_IBF_K} because window size is not bigger than k-mer size.")
            endif()
        endforeach()
    endforeach()
endmacro()

macro(build_kernels_report)
    foreach(WINDOW_SIZE ${WINDOW_SIZE_LIST})
        foreach(MIN_IBF_K ${MIN_IBF_K_LIST})
            if(${WINDOW_SIZE} GREATER ${MIN_IBF_K})
                foreach(BIN_COUNT ${BIN_COUNT_LIST})
                    foreach(KERNEL_COPYS ${KERNEL_COPYS_LIST})
                        set(FPGA_EARLY_IMAGE  ${TARGET_NAME}_kernel_w${WINDOW_SIZE}_k${MIN_IBF_K}_b${BIN_COUNT}_kernels${KERNEL_COPYS}_report.a)
                        # The compile output is not an executable, but an intermediate compilation result unique to SYCL.
                        add_executable(${FPGA_EARLY_IMAGE} ${DEVICE_SOURCE_FILE})
                        target_include_directories(${FPGA_EARLY_IMAGE} PRIVATE ${INCLUDE_PATH})
                        target_compile_definitions(${FPGA_EARLY_IMAGE} PRIVATE -DFPGA_HARDWARE -DWINDOW_SIZE=${WINDOW_SIZE} -DMIN_IBF_K=${MIN_IBF_K} -DBIN_COUNT=${BIN_COUNT} -DKERNEL_COPYS=${KERNEL_COPYS})
                        target_compile_options(${FPGA_EARLY_IMAGE} PRIVATE ${COMMON_COMPILE_FLAGS} -qactypes)
                        target_link_options(${FPGA_EARLY_IMAGE} PRIVATE ${COMMON_LINK_FLAGS} ${HARDWARE_LINK_FLAGS} -fsycl-link=early)
                        # fsycl-link=early stops the compiler after RTL generation, before invoking QuartusÂ®
                    endforeach()
                endforeach()
            else()
                message(WARNING "Deselecting w${WINDOW_SIZE}_k${MIN_IBF_K} because window size is not bigger than k-mer size.")
            endif()
        endforeach()
    endforeach()
endmacro()

macro(build_kernels_hardware)
    foreach(WINDOW_SIZE ${WINDOW_SIZE_LIST})
        foreach(MIN_IBF_K ${MIN_IBF_K_LIST})
            if(${WINDOW_SIZE} GREATER ${MIN_IBF_K})
                foreach(BIN_COUNT ${BIN_COUNT_LIST})
                    foreach(KERNEL_COPYS ${KERNEL_COPYS_LIST})
                        set(FPGA_DEVICE_TARGET ${TARGET_NAME}_kernel_w${WINDOW_SIZE}_k${MIN_IBF_K}_b${BIN_COUNT}_kernels${KERNEL_COPYS}.fpga)
                        add_library(${FPGA_DEVICE_TARGET} SHARED EXCLUDE_FROM_ALL ${DEVICE_SOURCE_FILE})
                        target_include_directories(${FPGA_DEVICE_TARGET} PRIVATE ${INCLUDE_PATH})
                        target_compile_definitions(${FPGA_DEVICE_TARGET} PRIVATE -DFPGA_HARDWARE -DWINDOW_SIZE=${WINDOW_SIZE} -DMIN_IBF_K=${MIN_IBF_K} -DBIN_COUNT=${BIN_COUNT} -DKERNEL_COPYS=${KERNEL_COPYS})
                        target_compile_options(${FPGA_DEVICE_TARGET} PRIVATE ${COMMON_COMPILE_FLAGS} -qactypes)
                        target_link_options(${FPGA_DEVICE_TARGET} PRIVATE ${COMMON_LINK_FLAGS} -qactypes ${HARDWARE_LINK_FLAGS})
                        add_dependencies(${FPGA_TARGET} ${FPGA_DEVICE_TARGET})
                    endforeach()
                endforeach()
            else()
                message(WARNING "Deselecting w${WINDOW_SIZE}_k${MIN_IBF_K} because window size is not bigger than k-mer size.")
            endif()
        endforeach()
    endforeach()
endmacro()