variables:
  # use custom version below that can handle private repositories
  # GIT_SUBMODULE_STRATEGY: recursive

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  # - deploy

# https://stackoverflow.com/a/58679225
# https://stackoverflow.com/a/53758544
.update_submodule: &update_submodule |-
  git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@".insteadOf "https://"
  git submodule sync
  git submodule update --init

.install_packages: &install_packages |-
  apt update
  apt -y install ninja-build # ninja
  apt -y install cmake # cmake
  apt -y install opencl-headers opencl-clhpp-headers ocl-icd-opencl-dev # opencl-lib

build:icc:23.1:
  stage: build
  image: intel/oneapi-basekit:2023.1.0-devel-ubuntu22.04
  before_script:
    - *update_submodule
    - *install_packages
    - mkdir -p build-icc-23.1
    - cd build-icc-23.1
  script:
    - CC=icx CXX=icpx cmake -G Ninja -DIBF_USE_IOC64=1 ${CI_PROJECT_DIR}
    - cmake --build . -j 1
  artifacts:
    paths:
      - build-icc-23.1
      # depending on your build setup it's most likely a good idea to cache outputs to reduce the build time
      # cache:
      #   paths:
      #     - "*.o"

# run tests using the binary built before
test:icc:23.1:
  stage: test
  needs: [build:icc:23.1]
  image: intel/oneapi-basekit:2023.1.0-devel-ubuntu22.04
  before_script:
    - *install_packages
    - cd build-icc-23.1
  script:
    - ctest --test-dir ./test

build:gcc:9:
  stage: build
  image: intel/oneapi-basekit:2023.1.0-devel-ubuntu20.04
  before_script:
    - *update_submodule
    - *install_packages
    - mkdir -p build-gcc-9-test
    - cd build-gcc-9-test
  script:
    - CC=gcc-9 CXX=g++-9 cmake -G Ninja -DIBF_USE_IOC64=1 ${CI_PROJECT_DIR}/test
    - cmake --build . -j 1
  artifacts:
    paths:
      - build-gcc-9-test
      # depending on your build setup it's most likely a good idea to cache outputs to reduce the build time
      # cache:
      #   paths:
      #     - "*.o"

# run tests using the binary built before
test:gcc:9:
  stage: test
  needs: [build:gcc:9]
  image: intel/oneapi-basekit:2023.1.0-devel-ubuntu20.04
  before_script:
    - *install_packages
    - cd build-gcc-9-test
  script:
    - ctest .
